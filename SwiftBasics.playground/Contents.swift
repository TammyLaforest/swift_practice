import Foundation


// Swift Basics

//var age : Int = 30
//
//age += 1
//
//let name : String = "Nick"
//
// let minute = 28
//
//// Comment
//
///*
// block
// block
// block
// */
//
//print(age)
//
//// Math
//print(1+2)
//print(1-2)
//print(1*2)
//print(1.0/2.0)
//
//var weight = 185.83458345834583458345
//var height = 20
//
//// Change the type
//age * Int(weight)
//
//Double(age) * weight
//
//let feet = 5
//let inches = 4
//
//
//(feet * 12) + inches
//
//var canRideRide = true
//
//if feet < 6 || inches < 5 {
//    print("hey")
//}
//
//let number = 43
//
//if number < 10 {
//    print("this is a single digit number")
//}
//else {
//    print("john")
//}
//
//if name == "Nick" && age == 31 {
//    print("dsnfdf")
//}
//
var array1 : [Any] = ["a", "b", 56]
//
//array1.append("d")
//array1.append(4)
//array1.insert("john", at: 1)
//array1.remove(at: 4)
//array1.count
//
//

// for loops
//for num in 1...10 {
//    print(num)
//}

//for movie in array1{
//    print(movie)
//}

//let array2 = [11, 12, 13, 14, 15]

//var count = 1
//for num in array2 {
//    print("\(count). \(num)")
//    count += 1
//}

//for x in 0..<array2.count{
//    print("\(x+1). \(array2[x])")
//}

// Swift Basics Project

// Print out how many of the numbers are above 5,000

// Note: age += 1

//var numbers = [7505,2349,7509,1267,7612,2622,503,7058,2731,3012,1226,3003,7796,7667,8240,8522,1137,4263,31,2416,9048,3392,911,3391,6255,3052,2603,5542,8414,7597,5545,1897,7394,9812,9003,4747,4811,5629,4674,4678,3362,3782,1291,9949,391,9202,9195,808,1491,523,9835,3038,1195,1186,4513,9789,9721,1695,4185,9713,5923,744,4854,6385,82,4613,1438,4430,7973,4514,4430,7540,1018,9843,4472,3193,83,9949,278,8259,8953,3782,6174,346,6101,9974,9938,7990,8360,9876,2149,8625,2564,1866,6455,512,3684,5462,1995,7118,2099,2140,4243,3245,2351,9448,8522,1820,3818,5424,3968,1476,7032,9389,1313,1498,4406,4228,5224,8000,2549,5398,1218,1049,6271,1472,299,8663,6003,6544,1164,7284,5779,6136,2503,3202,8036,9501,3134,9215,4428,4458,4065,7772,7713,9081,2169,1751,2933,3134,2796,971,3501,7385,334,9890,2898,4578,3072,6818,4535,2101,7631,867,1823,1273,8958,6879,4135,4520,6373,9575,144,8983,2422,817,9026,3050,7813,7872,4793,6714,7247,133,6469,1381,444,8187,9089,2120,6263,5449,4740,6911,1892,2597,5959,2177,459,1488,5265,9369,1262,1141,4124,3790,1774,1839,268,2061,5026,6950,687,4453,1080,1495,9089,7407,7488,8314,5382,3725,3710,947,562,462,3980,6513,8730,1422,2281,9624,7112,8598,1726,3510,7809,1728,1594,4833,7793,5023,7503,6630,4844,546,8755,8576,1259,6290,8800,6666,3022,7735,8611,576,3451,7820,6346,5785,7120,5700,4423,876,174,4802,1856,8092,3445,2771,8725,2445,4654,3841,1098,9148,2908,217,6338,8508,5529,3070,5664,2153,2046,3239,8161,7636,2544,2983,6686,4522,6649,3319,4121,6258,7059,1173,2036,4100,9065,2378,546,3536,5984,3386,4812,1464,9135,9093,4017,8640,384,5820,1691,9065,8919,391,5043,816,398,5267,6988,5343,250,9375,2105,751,511,5380,8517,9148,4171,7557,7862,1762,5239,3951,5413,1531,7616,2028,1713,4058,8641,667,2445,7980,8079,4540,8157,1852,823,5802,9274,6594,5815,4309,4477,4984,8979,1956,9848,4830,2349,481,7112,6623,8650,7255,6291,6490,8937,4780,4199,7248,6618,6298,5462,3591,3018,2055,3786,4485,1884,4333,4378,6085,5381,7904,6367,1778,8876,6866,6940,2265,4502,2523,5421,1121,7604,4369,1789,8787,8678,5064,786,9165,8942,434,8430,8470,5362,3127,2099,8378,1615,3565,3997,1844,244,9424,2487,2471,5391,4164,2129,1745,9352,3745,131,7835,4734,5181,1319,3693,6027,4774,6959,9150,4728,9931,4019,1854,8239,9450,7367,5922,9504,58,5708,8620,162,9988,5059,3139,8768,3531,4600,2327,4970,7635,2256,1572,5151,6469,6779,1762,807,5986,5893,7770,469,1743,8712,5600,2329,794,8595,9524,1701,1860,3845,981,3059,7752,9264,8973,3958,2301,4553,8443,438,2884,98,3344,7007,4359,9154,1479,4783,4776,1021,9113,2592,5801,8613,1399,8039,9508,8253,9405,4454,8641,6246,9279,3893,4124,4620,4950,6517,7438,4036,3960,5868,1522,6709,5727,3625,6073,6612,8454,6459,8512,9097,1985,7562,9135,806,4396,6352,4134,253,3243,8086,9555,4234,6788,7195,5049,669,8949,3904,6338,3943,3632,6895,5495,4848,2436,3824,8688,8722,4375,4739,2541,4723,5226,9330,8370,7725,3358,6510,3404,3771,4170,6013,6332,586,6180,3704,690,8549,8691,4159,3971,4327,8196,8414,6375,8393,8493,2237,1348,7203,7780,782,9167,6308,3223,5555,8622,4822,4356,9863,5307,1878,5756,3009,5263,7246,1084,3413,6211,4830,9432,999,9413,8890,9637,2856,7861,6525,567,7287,7291,847,9770,8461,8347,5556,8018,7687,157,8095,7949,9624,7285,7823,2619,2731,7565,3013,3722,6635,9164,7660,2142,2230,2465,5477,2899,3533,6246,4248,2355,1374,7481,6652,2764,6618,271,1595,7788,6166,8103,5944,5808,8182,9724,1934,2289,10000,565,465,5568,3085,1698,7039,8787,8910,5617,4029,33,8623,7343,6654,9758,388,5627,4679,533,1058,8602,3715,2945,3056,4248,1858,682,6052,3458,3097,9475,5347,7255,1476,1381,9361,5594,1829,6896,4317,2919,2979,832,4115,8356,5687,2220,6564,5134,6243,2185,4210,3729,2237,1743,2512,3281,3590,1142,6056,3878,4352,8636,7670,3605,9621,2753,1822,7559,7249,3343,6015,8236,4263,3675,8349,2724,6169,7342,8188,5177,4922,6246,8958,7899,9318,7151,1158,5095,306,3127,7656,6494,814,4784,628,2101,1442,2937,2396,9446,3697,4602,6251,1713,2060,2605,9903,2270,7118,4702,4770,6309,5780,7609,9042,3506,4621,2814,1648,6444,6703,6406,9699,7873,9402,6082,2793,6893,6446,1480,4110,4580,2191,1276,3014,7914,6789,5492,8430,2875,8049,3566,6058,5681,7287,6206,294,594,6963,2664,2218,5685,9431,1236,4748,8405,1188,9899,1149,2288,7712,5924,3858,8527,9743,536,9291,1764,8022,5883,2499,5646,6824,5163,1787,1838,8959,9630,3301,2374,3948,4824,7217,1691,543,1538,9404,7030,8074,5906,8267,8386,3526,3162,4871,4795,5194,9064,7031,5413,3549,2319,4567,9099,8285,9915,802,5537,292,8064,1484,5648,1227,9545,9320,7411,9047,5257,7350,9878,3697,1074,6106,2081,2835,2614,1893,210,2533,4735,1514,680,4262,5990,7701,7583,9529,7931,3923,6310,1232,6901,5531,8067,5244,235,3168,2561,9606,5367,7383,5996,4247,7505,7431,3252,1544,9922,6704,7675,4463,7736,483,1322,3137,9042,3794,9602,5996,8754,3764,4534,1064,7984,9629,5495,483,5768,1773,7207,7377,202,720,4499,562,3284,5119,3860,6754,9818,8916,2322,2034,3441,101,3213,7415,7763,4062,51,8015,438,1034,6912,6870,6252,6463,3942,9256,8663,2573,3994,6626,2086,2796,416,1527,8844,1206,2871,1146,4902,4774,2800,253,2762,]
//
//var count = 0
//for num in numbers {
//    if num > 5000{
//        count += 1
//    }
//}
//
//print(count)
//
//var str = "["
//
//for _ in 1...100 {
//    str += "\(Int.random(in: 0...10000)),"
//}
//
//str += "]"
//
//print (str)
